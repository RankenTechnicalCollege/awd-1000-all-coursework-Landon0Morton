{\rtf1\ansi \deff0{\fonttbl
{\f0\froman\fcharset0\fprq2 Times New Roman;
}{\f1\froman\fcharset0\fprq2 Times New Roman;
}{\f2\fmodern\fcharset0\fprq1 Courier New;
}}{\colortbl;
\red0\green0\blue0;
\red0\green0\blue255;
\red0\green255\blue255;
\red0\green255\blue0;
\red255\green0\blue255;
\red255\green0\blue0;
\red255\green255\blue0;
\red255\green255\blue255;
\red0\green0\blue128;
\red0\green128\blue0;
\red128\green0\blue128;
\red128\green0\blue0;
\red128\green128\blue0;
\red128\green128\blue128;
\red192\green192\blue192;
}\hyphauto1\deflang1033
\marglsxn2070\margrsxn1080\margtsxn720\margbsxn1440\cols1\endnhere\colno1\colw9090\pard
\brdrb\brdrs\brdrw120\brdrcf1
\nowidctlpar\hyphpar0
\li-630\ri0\fi0
\ql\plain \b \f0
\fs28
\cf1
{Chapter 10: How to work with web storage\par
}\plain \b \f0
\fs28
\cf1
{Murach's Modern JavaScript}\plain \f1
\fs2
\cf1
{\par
}\plain \f1
\fs2
\cf1
\pard
\nowidctlpar\hyphpar0
\li0\ri0\fi0
\ql\plain \f1
\fs36
\cf1
{\par
}\plain \f1
\fs36
\cf1
\pard
\nowidctlpar\hyphpar0
\li-630\ri0\fi0
\ql\plain \b \f1
\fs22
\cf1
{MULTIPLE CHOICE}\plain \f1
\fs2
\cf1
{\par
}\plain \f1
\fs2
\cf1
\pard
\nowidctlpar\hyphpar0
\li0\ri0\fi0
\ql\plain \f1
\fs22
\cf1
{\par
}\plain \f1
\fs22
\cf1
\pard
\widctlpar\keep\hyphpar0
\li0\ri0\fi-630
\ql\sa120\tqr\tx-180\tx0
{\tab }\plain \f1
\fs22
\cf1
{1.}{\tab }\plain \f1
\fs22
\cf1
{Which of the following statements about session cookies is }\plain \b \f1
\fs22
\cf1
{true}\plain \f1
\fs22
\cf1
{?\par
}\plain \f1
\fs22
\cf1
\trowd \trql\trgaph45\trleft-45\trautofit1
\clvertalt
\cellx315
\clvertalt
\cellx8415
\pard
\intbl \widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql{a.}{\cell
}{They can not specify a path.\cell
}\row
\trowd \trql\trgaph45\trleft-45\trautofit1
\clvertalt
\cellx315
\clvertalt
\cellx8415
\pard
\intbl \widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql{b.}{\cell
}{They are deleted when the browser is closed.\cell
}\row
\trowd \trql\trgaph45\trleft-45\trautofit1
\clvertalt
\cellx315
\clvertalt
\cellx8415
\pard
\intbl \widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql{c.}{\cell
}{They are always encrypted when sent to the web server.\cell
}\row
\trowd \trql\trgaph45\trleft-45\trautofit1
\clvertalt
\cellx315
\clvertalt
\cellx8415
\pard
\intbl \widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql{d.}{\cell
}{They are saved by the web browser and available even after the browser is close
d.\cell
}\row
\pard
\widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql\pard
\nowidctlpar\hyphpar0
\li0\ri0\fi0
\ql\plain \f1
\fs2
\cf1
{\par
}\plain \f1
\fs2
\cf1
\pard
\nowidctlpar\hyphpar0
\li0\ri0\fi0
\ql\sa1\plain \f1
\fs12
\cf1
{\par
}\plain \f1
\fs12
\cf1
\pard
\nowidctlpar\hyphpar0
\li0\ri0\fi0
\ql\tx0\tx634\tx1958\tx2592\tx3916\tx4550\tx5874\tx6508
\plain \f1
\fs22
\cf1
{ANS:\tab }\plain \f1
\fs22
\cf1
{B}\plain \f1
\fs2
\cf1
{\par
}\plain \f1
\fs2
\cf1
\pard
\nowidctlpar\hyphpar0
\li0\ri0\fi0
\ql\plain \f1
\fs22
\cf1
{\par
}\plain \f1
\fs22
\cf1
\pard
\widctlpar\keep\hyphpar0
\li0\ri0\fi-630
\ql\sa120\tqr\tx-180\tx0
{\tab }\plain \f1
\fs22
\cf1
{2.}{\tab }\plain \f1
\fs22
\cf1
{Web storage stores data in...\par
}\plain \f1
\fs22
\cf1
\trowd \trql\trgaph45\trleft-45\trautofit1
\clvertalt
\cellx315
\clvertalt
\cellx8415
\pard
\intbl \widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql{a.}{\cell
}{Arrays\cell
}\row
\trowd \trql\trgaph45\trleft-45\trautofit1
\clvertalt
\cellx315
\clvertalt
\cellx8415
\pard
\intbl \widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql{b.}{\cell
}{XML\cell
}\row
\trowd \trql\trgaph45\trleft-45\trautofit1
\clvertalt
\cellx315
\clvertalt
\cellx8415
\pard
\intbl \widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql{c.}{\cell
}{Key/value pairs\cell
}\row
\trowd \trql\trgaph45\trleft-45\trautofit1
\clvertalt
\cellx315
\clvertalt
\cellx8415
\pard
\intbl \widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql{d.}{\cell
}{Nodes\cell
}\row
\pard
\widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql\pard
\nowidctlpar\hyphpar0
\li0\ri0\fi0
\ql\plain \f1
\fs2
\cf1
{\par
}\plain \f1
\fs2
\cf1
\pard
\nowidctlpar\hyphpar0
\li0\ri0\fi0
\ql\sa1\plain \f1
\fs12
\cf1
{\par
}\plain \f1
\fs12
\cf1
\pard
\nowidctlpar\hyphpar0
\li0\ri0\fi0
\ql\tx0\tx634\tx1958\tx2592\tx3916\tx4550\tx5874\tx6508
\plain \f1
\fs22
\cf1
{ANS:\tab }\plain \f1
\fs22
\cf1
{C}\plain \f1
\fs2
\cf1
{\par
}\plain \f1
\fs2
\cf1
\pard
\nowidctlpar\hyphpar0
\li0\ri0\fi0
\ql\plain \f1
\fs22
\cf1
{\par
}\plain \f1
\fs22
\cf1
\pard
\widctlpar\keep\hyphpar0
\li0\ri0\fi-630
\ql\sa120\tqr\tx-180\tx0
{\tab }\plain \f1
\fs22
\cf1
{3.}{\tab }\plain \f1
\fs22
\cf1
{Which of the following statements about web storage is }\plain \b \f1
\fs22
\cf1
{false}\plain \f1
\fs22
\cf1
{?\par
}\plain \f1
\fs22
\cf1
\trowd \trql\trgaph45\trleft-45\trautofit1
\clvertalt
\cellx315
\clvertalt
\cellx8415
\pard
\intbl \widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql{a.}{\cell
}{It can store up to 10MB of data.\cell
}\row
\trowd \trql\trgaph45\trleft-45\trautofit1
\clvertalt
\cellx315
\clvertalt
\cellx8415
\pard
\intbl \widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql{b.}{\cell
}{It is designed to be accessed by client-side code.\cell
}\row
\trowd \trql\trgaph45\trleft-45\trautofit1
\clvertalt
\cellx315
\clvertalt
\cellx8415
\pard
\intbl \widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql{c.}{\cell
}{It can be exploited by cross-site scripting attacks.\cell
}\row
\trowd \trql\trgaph45\trleft-45\trautofit1
\clvertalt
\cellx315
\clvertalt
\cellx8415
\pard
\intbl \widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql{d.}{\cell
}{It is passed to the server with every HTTP request.\cell
}\row
\pard
\widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql\pard
\nowidctlpar\hyphpar0
\li0\ri0\fi0
\ql\plain \f1
\fs2
\cf1
{\par
}\plain \f1
\fs2
\cf1
\pard
\nowidctlpar\hyphpar0
\li0\ri0\fi0
\ql\sa1\plain \f1
\fs12
\cf1
{\par
}\plain \f1
\fs12
\cf1
\pard
\nowidctlpar\hyphpar0
\li0\ri0\fi0
\ql\tx0\tx634\tx1958\tx2592\tx3916\tx4550\tx5874\tx6508
\plain \f1
\fs22
\cf1
{ANS:\tab }\plain \f1
\fs22
\cf1
{D}\plain \f1
\fs2
\cf1
{\par
}\plain \f1
\fs2
\cf1
\pard
\nowidctlpar\hyphpar0
\li0\ri0\fi0
\ql\plain \f1
\fs22
\cf1
{\par
}\plain \f1
\fs22
\cf1
\pard
\widctlpar\keep\hyphpar0
\li0\ri0\fi-630
\ql\sa120\tqr\tx-180\tx0
{\tab }\plain \f1
\fs22
\cf1
{4.}{\tab }\plain \f1
\fs22
\cf1
{The main difference between local storage and session storage is...\par
}\plain \f1
\fs22
\cf1
\trowd \trql\trgaph45\trleft-45\trautofit1
\clvertalt
\cellx315
\clvertalt
\cellx8415
\pard
\intbl \widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql{a.}{\cell
}{Session storage is lost when the browser closes; local storage is stored indefi
nitely\cell
}\row
\trowd \trql\trgaph45\trleft-45\trautofit1
\clvertalt
\cellx315
\clvertalt
\cellx8415
\pard
\intbl \widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql{b.}{\cell
}{Session storage is stored indefinitely; local storage is lost when the browser 
closes\cell
}\row
\trowd \trql\trgaph45\trleft-45\trautofit1
\clvertalt
\cellx315
\clvertalt
\cellx8415
\pard
\intbl \widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql{c.}{\cell
}{Session storage has a shortcut syntax; local storage doesn\'92
t\cell
}\row
\trowd \trql\trgaph45\trleft-45\trautofit1
\clvertalt
\cellx315
\clvertalt
\cellx8415
\pard
\intbl \widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql{d.}{\cell
}{Local storage has a clear() method; session storage doesn\'92
t\cell
}\row
\pard
\widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql\pard
\nowidctlpar\hyphpar0
\li0\ri0\fi0
\ql\plain \f1
\fs2
\cf1
{\par
}\plain \f1
\fs2
\cf1
\pard
\nowidctlpar\hyphpar0
\li0\ri0\fi0
\ql\sa1\plain \f1
\fs12
\cf1
{\par
}\plain \f1
\fs12
\cf1
\pard
\nowidctlpar\hyphpar0
\li0\ri0\fi0
\ql\tx0\tx634\tx1958\tx2592\tx3916\tx4550\tx5874\tx6508
\plain \f1
\fs22
\cf1
{ANS:\tab }\plain \f1
\fs22
\cf1
{A}\plain \f1
\fs2
\cf1
{\par
}\plain \f1
\fs2
\cf1
\pard
\nowidctlpar\hyphpar0
\li0\ri0\fi0
\ql\plain \f1
\fs22
\cf1
{\par
}\plain \f1
\fs22
\cf1
\pard
\widctlpar\keep\hyphpar0
\li0\ri0\fi-630
\ql\sa120\tqr\tx-180\tx0
{\tab }\plain \f1
\fs22
\cf1
{5.}{\tab }\plain \f1
\fs22
\cf1
{What is stored in local storage after the button with an id of my_button is clic
ked?\par
}\plain \f1
\fs22
\cf1
\pard
\widctlpar\keep\hyphpar0
\li0\ri0\fi360
\ql\plain \b \f2
\fs18
\cf1
{getElement("#my_button").addEventListener("click", () => \{\par
}\plain \b \f2
\fs18
\cf1
{   const myPets = ["Fluffy", "Spot", "Steve"];\par
}\plain \b \f2
\fs18
\cf1
{   localStorage.count = myPets.length;\par
}\plain \b \f2
\fs18
\cf1
{   localStorage.pets = JSON.stringify(myPets);\par
}\plain \b \f2
\fs18
\cf1
{   localStorage.removeItem("count");\par
}\plain \b \f2
\fs18
\cf1
\pard
\widctlpar\keep\hyphpar0
\li0\ri0\fi360
\ql\sa120{ \});\par
}\plain \f1
\fs22
\cf1
\trowd \trql\trgaph45\trleft-45\trautofit1
\clvertalt
\cellx315
\clvertalt
\cellx8415
\pard
\intbl \widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql{a.}{\cell
}{A number and a JSON string\cell
}\row
\trowd \trql\trgaph45\trleft-45\trautofit1
\clvertalt
\cellx315
\clvertalt
\cellx8415
\pard
\intbl \widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql{b.}{\cell
}{A number\cell
}\row
\trowd \trql\trgaph45\trleft-45\trautofit1
\clvertalt
\cellx315
\clvertalt
\cellx8415
\pard
\intbl \widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql{c.}{\cell
}{A JSON string\cell
}\row
\trowd \trql\trgaph45\trleft-45\trautofit1
\clvertalt
\cellx315
\clvertalt
\cellx8415
\pard
\intbl \widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql{d.}{\cell
}{Nothing\cell
}\row
\pard
\widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql\pard
\nowidctlpar\hyphpar0
\li0\ri0\fi0
\ql\plain \f1
\fs2
\cf1
{\par
}\plain \f1
\fs2
\cf1
\pard
\nowidctlpar\hyphpar0
\li0\ri0\fi0
\ql\sa1\plain \f1
\fs12
\cf1
{\par
}\plain \f1
\fs12
\cf1
\pard
\nowidctlpar\hyphpar0
\li0\ri0\fi0
\ql\tx0\tx634\tx1958\tx2592\tx3916\tx4550\tx5874\tx6508
\plain \f1
\fs22
\cf1
{ANS:\tab }\plain \f1
\fs22
\cf1
{C}\plain \f1
\fs2
\cf1
{\par
}\plain \f1
\fs2
\cf1
\pard
\nowidctlpar\hyphpar0
\li0\ri0\fi0
\ql\plain \f1
\fs22
\cf1
{\par
}\plain \f1
\fs22
\cf1
\pard
\widctlpar\keep\hyphpar0
\li0\ri0\fi-630
\ql\sa120\tqr\tx-180\tx0
{\tab }\plain \f1
\fs22
\cf1
{6.}{\tab }\plain \f1
\fs22
\cf1
{Which of the following statements gets the same result as this statement?\par
}\plain \f1
\fs22
\cf1
\pard
\widctlpar\keep\hyphpar0
\li0\ri0\fi360
\ql\sa120\plain \b \f2
\fs18
\cf1
{localStorage.petStatus = "Hungry";\par
}\plain \b \f1
\fs22
\cf1
\trowd \trql\trgaph45\trleft-45\trautofit1
\clvertalt
\cellx315
\clvertalt
\cellx8415
\pard
\intbl \widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql\plain \f1
\fs22
\cf1
{a.}{\cell
}\plain \b \f2
\fs18
\cf1
{localStorage.setItem("petStatus", "Hungry");}\plain \b \f1
\fs22
\cf1
{\cell
}\row
\plain \f1
\fs22
\cf1
\trowd \trql\trgaph45\trleft-45\trautofit1
\clvertalt
\cellx315
\clvertalt
\cellx8415
\pard
\intbl \widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql{b.}{\cell
}\plain \b \f2
\fs18
\cf1
{localStorage.getItem("petStatus", "Hungry");}\plain \b \f1
\fs22
\cf1
{\cell
}\row
\plain \f1
\fs22
\cf1
\trowd \trql\trgaph45\trleft-45\trautofit1
\clvertalt
\cellx315
\clvertalt
\cellx8415
\pard
\intbl \widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql{c.}{\cell
}\plain \b \f2
\fs18
\cf1
{localStorage.save("petStatus", "Hungry");}\plain \b \f1
\fs22
\cf1
{\cell
}\row
\plain \f1
\fs22
\cf1
\trowd \trql\trgaph45\trleft-45\trautofit1
\clvertalt
\cellx315
\clvertalt
\cellx8415
\pard
\intbl \widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql{d.}{\cell
}\plain \b \f2
\fs18
\cf1
{localStorage.clear("petStatus", "Hungry");}\plain \f1
\fs22
\cf1
{\cell
}\row
\pard
\widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql\pard
\nowidctlpar\hyphpar0
\li0\ri0\fi0
\ql\plain \f1
\fs2
\cf1
{\par
}\plain \f1
\fs2
\cf1
\pard
\nowidctlpar\hyphpar0
\li0\ri0\fi0
\ql\sa1\plain \f1
\fs12
\cf1
{\par
}\plain \f1
\fs12
\cf1
\pard
\nowidctlpar\hyphpar0
\li0\ri0\fi0
\ql\tx0\tx634\tx1958\tx2592\tx3916\tx4550\tx5874\tx6508
\plain \f1
\fs22
\cf1
{ANS:\tab }\plain \f1
\fs22
\cf1
{A}\plain \f1
\fs2
\cf1
{\par
}\plain \f1
\fs2
\cf1
\pard
\nowidctlpar\hyphpar0
\li0\ri0\fi0
\ql\plain \f1
\fs22
\cf1
{\par
}\plain \f1
\fs22
\cf1
\pard
\widctlpar\keep\hyphpar0
\li0\ri0\fi-630
\ql\sa120\tqr\tx-180\tx0
{\tab }\plain \f1
\fs22
\cf1
{7.}{\tab }\plain \f1
\fs22
\cf1
{Why will the following statements fail to display the month a pet was adopted?\par
}\plain \f1
\fs22
\cf1
\pard
\widctlpar\keep\hyphpar0
\li0\ri0\fi360
\ql\plain \b \f2
\fs18
\cf1
{sessionStorage.adoptDate = new Date("12/1/2022");\par
}\plain \b \f2
\fs18
\cf1
{const petAdoptDate = sessionStorage.adoptDate;\par
}\plain \b \f2
\fs18
\cf1
\pard
\widctlpar\keep\hyphpar0
\li0\ri0\fi360
\ql\sa120{alert(petAdoptDate.getMonth());\par
}\plain \b \f1
\fs22
\cf1
\trowd \trql\trgaph45\trleft-45\trautofit1
\clvertalt
\cellx315
\clvertalt
\cellx8415
\pard
\intbl \widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql\plain \f1
\fs22
\cf1
{a.}{\cell
}{Because a value must be converted to the JSON format before being stored.\cell
}\row
\trowd \trql\trgaph45\trleft-45\trautofit1
\clvertalt
\cellx315
\clvertalt
\cellx8415
\pard
\intbl \widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql{b.}{\cell
}{Because the name of the constant does not match the name of the key.\cell
}\row
\trowd \trql\trgaph45\trleft-45\trautofit1
\clvertalt
\cellx315
\clvertalt
\cellx8415
\pard
\intbl \widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql{c.}{\cell
}{Because the date string that\'92
s stored needs to be converted to a Date object be
fore the getMonth() method can be called.\cell
}\row
\trowd \trql\trgaph45\trleft-45\trautofit1
\clvertalt
\cellx315
\clvertalt
\cellx8415
\pard
\intbl \widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql{d.}{\cell
}{Because Date objects can only be stored in local storage, not session storage.\cell
}\row
\pard
\widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql\pard
\nowidctlpar\hyphpar0
\li0\ri0\fi0
\ql\plain \f1
\fs2
\cf1
{\par
}\plain \f1
\fs2
\cf1
\pard
\nowidctlpar\hyphpar0
\li0\ri0\fi0
\ql\sa1\plain \f1
\fs12
\cf1
{\par
}\plain \f1
\fs12
\cf1
\pard
\nowidctlpar\hyphpar0
\li0\ri0\fi0
\ql\tx0\tx634\tx1958\tx2592\tx3916\tx4550\tx5874\tx6508
\plain \f1
\fs22
\cf1
{ANS:\tab }\plain \f1
\fs22
\cf1
{C}\plain \f1
\fs2
\cf1
{\par
}\plain \f1
\fs2
\cf1
\pard
\nowidctlpar\hyphpar0
\li0\ri0\fi0
\ql\plain \f1
\fs22
\cf1
{\par
}\plain \f1
\fs22
\cf1
\pard
\widctlpar\keep\hyphpar0
\li0\ri0\fi-630
\ql\sa120\tqr\tx-180\tx0
{\tab }\plain \f1
\fs22
\cf1
{8.}{\tab }\plain \f1
\fs22
\cf1
{Which of the following can you }\plain \b \f1
\fs22
\cf1
{not}\plain \f1
\fs22
\cf1
{ do using Chrome\'92
s developer tools?\par
}\plain \f1
\fs22
\cf1
\trowd \trql\trgaph45\trleft-45\trautofit1
\clvertalt
\cellx315
\clvertalt
\cellx8415
\pard
\intbl \widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql{a.}{\cell
}{Add a new key/value pair to local storage\cell
}\row
\trowd \trql\trgaph45\trleft-45\trautofit1
\clvertalt
\cellx315
\clvertalt
\cellx8415
\pard
\intbl \widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql{b.}{\cell
}{Change the name of a key in session storage\cell
}\row
\trowd \trql\trgaph45\trleft-45\trautofit1
\clvertalt
\cellx315
\clvertalt
\cellx8415
\pard
\intbl \widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql{c.}{\cell
}{Delete a value stored using the JSON format\cell
}\row
\trowd \trql\trgaph45\trleft-45\trautofit1
\clvertalt
\cellx315
\clvertalt
\cellx8415
\pard
\intbl \widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql{d.}{\cell
}{All of these are possible using Chrome\'92
s developer tools\cell
}\row
\pard
\widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql\pard
\nowidctlpar\hyphpar0
\li0\ri0\fi0
\ql\plain \f1
\fs2
\cf1
{\par
}\plain \f1
\fs2
\cf1
\pard
\nowidctlpar\hyphpar0
\li0\ri0\fi0
\ql\sa1\plain \f1
\fs12
\cf1
{\par
}\plain \f1
\fs12
\cf1
\pard
\nowidctlpar\hyphpar0
\li0\ri0\fi0
\ql\tx0\tx634\tx1958\tx2592\tx3916\tx4550\tx5874\tx6508
\plain \f1
\fs22
\cf1
{ANS:\tab }\plain \f1
\fs22
\cf1
{D}\plain \f1
\fs2
\cf1
{\par
}\plain \f1
\fs2
\cf1
\pard
\nowidctlpar\hyphpar0
\li0\ri0\fi0
\ql\plain \f1
\fs22
\cf1
{\par
}\plain \f1
\fs22
\cf1
\pard
\widctlpar\keep\hyphpar0
\li0\ri0\fi-630
\ql\sa120\tqr\tx-180\tx0
{\tab }\plain \f1
\fs22
\cf1
{9.}{\tab }\plain \f1
\fs22
\cf1
{Which of these statements is equivalent to the code below?\par
}\plain \f1
\fs22
\cf1
\pard
\widctlpar\keep\hyphpar0
\li0\ri0\fi360
\ql\plain \b \f2
\fs18
\cf1
{let breed = "not specified";\par
}\plain \b \f2
\fs18
\cf1
{if (localStorage.breed) \{\par
}\plain \b \f2
\fs18
\cf1
{    breed = localStorage.breed;\par
}\plain \b \f2
\fs18
\cf1
\pard
\widctlpar\keep\hyphpar0
\li0\ri0\fi360
\ql\sa120{\}\par
}\plain \f1
\fs22
\cf1
\trowd \trql\trgaph45\trleft-45\trautofit1
\clvertalt
\cellx315
\clvertalt
\cellx8415
\pard
\intbl \widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql{a.}{\cell
}\plain \b \f2
\fs18
\cf1
{let breed = "not specified" | localStorage.breed;}\plain \b \f1
\fs22
\cf1
{\cell
}\row
\plain \f1
\fs22
\cf1
\trowd \trql\trgaph45\trleft-45\trautofit1
\clvertalt
\cellx315
\clvertalt
\cellx8415
\pard
\intbl \widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql{b.}{\cell
}\plain \b \f2
\fs18
\cf1
{let breed = localStorage.breed ?? "not specified";}\plain \b \f2
\fs22
\cf1
{\cell
}\row
\plain \f1
\fs22
\cf1
\trowd \trql\trgaph45\trleft-45\trautofit1
\clvertalt
\cellx315
\clvertalt
\cellx8415
\pard
\intbl \widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql{c.}{\cell
}\plain \b \f2
\fs18
\cf1
{let breed = if(!localStorage.breed) "not specified";}\plain \b \f1
\fs22
\cf1
{\cell
}\row
\plain \f1
\fs22
\cf1
\trowd \trql\trgaph45\trleft-45\trautofit1
\clvertalt
\cellx315
\clvertalt
\cellx8415
\pard
\intbl \widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql{d.}{\cell
}\plain \b \f2
\fs18
\cf1
{while(localStorage.breed != null) \{ let breed = "not specified"\} ;}\plain \f1
\fs22
\cf1
{\cell
}\row
\pard
\widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql\pard
\nowidctlpar\hyphpar0
\li0\ri0\fi0
\ql\plain \f1
\fs2
\cf1
{\par
}\plain \f1
\fs2
\cf1
\pard
\nowidctlpar\hyphpar0
\li0\ri0\fi0
\ql\sa1\plain \f1
\fs12
\cf1
{\par
}\plain \f1
\fs12
\cf1
\pard
\nowidctlpar\hyphpar0
\li0\ri0\fi0
\ql\tx0\tx634\tx1958\tx2592\tx3916\tx4550\tx5874\tx6508
\plain \f1
\fs22
\cf1
{ANS:\tab }\plain \f1
\fs22
\cf1
{B}\plain \f1
\fs2
\cf1
{\par
}\plain \f1
\fs2
\cf1
\pard
\nowidctlpar\hyphpar0
\li0\ri0\fi0
\ql\plain \f1
\fs22
\cf1
{\par
}\plain \f1
\fs22
\cf1
\pard
\widctlpar\keep\hyphpar0
\li0\ri0\fi-630
\ql\sa120\tqr\tx-180\tx0
{\tab }\plain \f1
\fs22
\cf1
{10.}{\tab }\plain \f1
\fs22
\cf1
{Which of these statements could you use to store an array named pets in local we
b storage?\par
}\plain \f1
\fs22
\cf1
\trowd \trql\trgaph45\trleft-45\trautofit1
\clvertalt
\cellx315
\clvertalt
\cellx8415
\pard
\intbl \widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql{a.}{\cell
}\plain \b \f2
\fs18
\cf1
{localStorage.allPets = JSON.stringify(pets);}\plain \b \f2
\fs22
\cf1
{\cell
}\row
\plain \f1
\fs22
\cf1
\trowd \trql\trgaph45\trleft-45\trautofit1
\clvertalt
\cellx315
\clvertalt
\cellx8415
\pard
\intbl \widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql{b.}{\cell
}\plain \b \f2
\fs18
\cf1
{localStorage.setItem(allPets, pets);}\plain \b \f2
\fs22
\cf1
{\cell
}\row
\plain \f1
\fs22
\cf1
\trowd \trql\trgaph45\trleft-45\trautofit1
\clvertalt
\cellx315
\clvertalt
\cellx8415
\pard
\intbl \widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql{c.}{\cell
}\plain \b \f2
\fs18
\cf1
{localStorage.setItem(allPets, JSON.parse(pets));}\plain \b \f1
\fs22
\cf1
{\cell
}\row
\plain \f1
\fs22
\cf1
\trowd \trql\trgaph45\trleft-45\trautofit1
\clvertalt
\cellx315
\clvertalt
\cellx8415
\pard
\intbl \widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql{d.}{\cell
}\plain \b \f2
\fs18
\cf1
{localStorage.allPets = new Array(pets);}\plain \f1
\fs22
\cf1
{\cell
}\row
\pard
\widctlpar\keep\hyphpar0
\li0\ri0\fi0
\ql\pard
\nowidctlpar\hyphpar0
\li0\ri0\fi0
\ql\plain \f1
\fs2
\cf1
{\par
}\plain \f1
\fs2
\cf1
\pard
\nowidctlpar\hyphpar0
\li0\ri0\fi0
\ql\sa1\plain \f1
\fs12
\cf1
{\par
}\plain \f1
\fs12
\cf1
\pard
\nowidctlpar\hyphpar0
\li0\ri0\fi0
\ql\tx0\tx634\tx1958\tx2592\tx3916\tx4550\tx5874\tx6508
\plain \f1
\fs22
\cf1
{ANS:\tab }\plain \f1
\fs22
\cf1
{A\par
\pard
}}